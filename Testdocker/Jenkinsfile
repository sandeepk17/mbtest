properties([
    parameters([
        [$class: 'ChoiceParameter', 
            choiceType: 'PT_SINGLE_SELECT', 
            description: 'Select the Env Name from the Dropdown List',
            name: 'Env', 
            randomName: 'choice-parameter-5631314439613978', 
            script: [
                $class: 'GroovyScript', 
                fallbackScript: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return[\'Could not get Env\']'
                ], 
                script: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return["c1","c1","c1c2"]'
                ]
            ]
        ], 
        [$class: 'ChoiceParameter', 
            choiceType: 'PT_MULTI_SELECT', 
            description: 'Select the Env Name from the Dropdown List',
            name: 'Multi', 
            randomName: 'choice-parameter-56313113978', 
            script: [
                $class: 'GroovyScript', 
                fallbackScript: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return[\'Could not get Env\']'
                ], 
                script: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return["Dev","Test","UAT","Prod"]'
                ]
            ]
        ], 
        [$class: 'ChoiceParameter', 
            choiceType: 'PT_RADIO', 
            description: 'Select the TestSuit from the Dropdown List',
            name: 'Test',
            randomName: 'choice-parameter-5631314439613988', 
            script: [
                $class: 'GroovyScript', 
                fallbackScript: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return[\'Could not get Env\']'
                ], 
                script: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return["ALL:selected",\
                                "sktst01",\
                               "sktst02",\
                                "sktst03",\
                                "sktst04",\
                                "sktst05"]'
                ]
            ]
        ],
        [$class: 'ChoiceParameter', 
            choiceType: 'PT_CHECKBOX', 
            description: 'Select the Version from below list',
            name: 'Test',
            randomName: 'choice-parameter-5631314349613988', 
            script: [
                $class: 'GroovyScript', 
                fallbackScript: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return[\'Could not get Env\']'
                ], 
                script: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return["ALL:selected",\
                                "c1-DK",\
                                "c2-UK"]'
                ]
            ]
        ],
        [$class: 'CascadeChoiceParameter', 
            choiceType: 'PT_CHECKBOX', 
            description: 'Select Servers',
            name: 'Server', 
            randomName: 'choice-parameter-5631314456178619', 
            referencedParameters: 'Env', 
            script: [
                $class: 'GroovyScript', 
                fallbackScript: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        'return[\'Could not get Environment from Env Param\']'
                ], 
                script: [
                    classpath: [], 
                    sandbox: false, 
                    script: 
                        ''' if (Env.equals("c1")){
                                return["skdev01","skdev02"]
                            }
                            else if(Env.equals("c2")){
                                return["sktst01","sktst02","sktst03"]
                            }
                            else if(Env.equals("c1c2")){
                                return["uat01","uat02","uat03"]
                            }
                        '''
                ]
            ]
        ]
    ])
])
pipeline {
    environment {
         vari = ""
    }

    agent any
    parameters {
        extendedChoice description: 'choose environment', multiSelectDelimiter: ',', name: 'environment', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_SINGLE_SELECT', value: 'Development Test UAT Production', visibleItemCount: 5
    }
    stages{
        stage('Build'){
            steps {
                script{
                    echo 'Hello'
                    echo "${params.Env}"
                    echo "${params.Test}"
                    echo "${params.Server}"
                    echo "${params.Multi}"
                    if (params.Server.equals("Could not get Environment from Env Param")) {
                      echo "Must be the first build after Pipeline deployment.  Aborting the build"
                      currentBuild.result = 'ABORTED'
                      return
                    }
                    echo "Crossed param validation"
                } 
            }
        }
        stage ("Test") {
            steps {
                script{
                    echo 'Hello'
                }
            }
        }
    }
}